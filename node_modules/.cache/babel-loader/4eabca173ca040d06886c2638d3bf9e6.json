{"ast":null,"code":"import _classCallCheck from \"/Users/xintong/shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xintong/shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xintong/shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xintong/shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xintong/shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xintong/shopping-cart/src/components/Shelf/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport ShelfHeader from \"./ShelfHeader/index\";\nimport ProductList from \"./ProductList/index\";\nimport PropTypes from 'prop-types';\nimport Data from \"./data.json\";\nimport \"./style.scss\";\nimport Spinner from './Spinner';\nimport { fetchProducts } from '../../reducers/reducer';\n\nvar Shelf =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Shelf, _Component);\n\n  function Shelf() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Shelf);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Shelf)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: false,\n      products: []\n    };\n\n    _this.handleFetchProducts = function () {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.filters;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      _this.props.fetchProducts(filters, function () {\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Shelf, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleFetchProducts();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var nextFilters = nextProps.filters;\n\n      if (nextFilters !== this.props.filters) {\n        this.handleFetchProducts(nextFilters, undefined);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.state.isLoading;\n      var items = this.state.products.items;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, isLoading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"shelf-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ShelfHeader, {\n        len: Object.keys(items).length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(ProductList, {\n        data: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Shelf;\n}(Component);\n\nShelf.propTypes = {\n  fetchProducts: PropTypes.func.isRequired,\n  products: PropTypes.array.isRequired,\n  filters: PropTypes.array\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.products,\n    filters: state.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProducts: fetchProducts\n})(Shelf);","map":{"version":3,"sources":["/Users/xintong/shopping-cart/src/components/Shelf/index.js"],"names":["React","Component","connect","ShelfHeader","ProductList","PropTypes","Data","Spinner","fetchProducts","Shelf","state","isLoading","products","handleFetchProducts","filters","props","setState","nextProps","nextFilters","undefined","items","Object","keys","length","propTypes","func","isRequired","array","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;IAEMC,K;;;;;;;;;;;;;;;;;UAUFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,QAAQ,EAAC;AAFL,K;;UAiBRC,mB,GAAsB,YAEjB;AAAA,UADDC,OACC,uEADS,MAAKC,KAAL,CAAWD,OACpB;;AACD,YAAKE,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd;;AACA,YAAKI,KAAL,CAAWP,aAAX,CAAyBM,OAAzB,EAAkC,YAAM;AACpC,cAAKE,QAAL,CAAc;AAAEL,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH,OAFD;AAGH,K;;;;;;;wCAnBmB;AAChB,WAAKE,mBAAL;AACH;;;8CAEyBI,S,EAAW;AAAA,UAChBC,WADgB,GACAD,SADA,CACzBH,OADyB;;AAGjC,UAAII,WAAW,KAAK,KAAKH,KAAL,CAAWD,OAA/B,EAAwC;AACpC,aAAKD,mBAAL,CAAyBK,WAAzB,EAAsCC,SAAtC;AACH;AACJ;;;6BAWO;AAAA,UACIR,SADJ,GACkB,KAAKD,KADvB,CACIC,SADJ;AAAA,UAEIS,KAFJ,GAEc,KAAKV,KAAL,CAAWE,QAFzB,CAEIQ,KAFJ;AAGJ,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,SAAS,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADlB,EAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAE,WAAF;AAAc,QAAA,GAAG,EAAEU,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAE,WAAF;AAAc,QAAA,IAAI,EAAEH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,CADJ;AASH;;;;EAhDenB,S;;AAAdQ,K,CACKe,S,GAAY;AACfhB,EAAAA,aAAa,EAAEH,SAAS,CAACoB,IAAV,CAAeC,UADf;AAEfd,EAAAA,QAAQ,EAAEP,SAAS,CAACsB,KAAV,CAAgBD,UAFX;AAGfZ,EAAAA,OAAO,EAAET,SAAS,CAACsB;AAHJ,C;;AAkDvB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAlB,KAAK;AAAA,SAAK;AAC9BE,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QADc;AAE9BE,IAAAA,OAAO,EAAEJ,KAAK,CAACU;AAFe,GAAL;AAAA,CAA7B;;AAKA,eAAelB,OAAO,CAClB0B,eADkB,EAElB;AAAEpB,EAAAA,aAAa,EAAbA;AAAF,CAFkB,CAAP,CAGbC,KAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport ShelfHeader from \"./ShelfHeader/index\";\nimport ProductList from \"./ProductList/index\";\nimport PropTypes from 'prop-types';\nimport Data from \"./data.json\";\nimport \"./style.scss\"\nimport Spinner from './Spinner';\nimport { fetchProducts } from '../../reducers/reducer';\n\nclass Shelf extends Component {\n    static propTypes = {\n        fetchProducts: PropTypes.func.isRequired,\n        products: PropTypes.array.isRequired,\n        filters: PropTypes.array,\n      };\n    // constructor(props) {\n    //     super(props);\n    // };\n    \n    state = {\n        isLoading: false,\n        products:[],\n    };\n\n    componentDidMount() {\n        this.handleFetchProducts();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { filters: nextFilters } = nextProps;\n\n        if (nextFilters !== this.props.filters) {\n            this.handleFetchProducts(nextFilters, undefined);\n        }\n    }\n\n    handleFetchProducts = (\n        filters = this.props.filters,\n    ) => {\n        this.setState({ isLoading: true });\n        this.props.fetchProducts(filters, () => {\n            this.setState({ isLoading: false });\n        });\n    };\n\n    render(){\n        const { isLoading } = this.state;\n        const { items } = this.state.products;\n        return (\n            <React.Fragment>\n                {isLoading && <Spinner />}\n                <div className=\"shelf-container\">\n                    < ShelfHeader len={Object.keys(items).length}/>\n                    < ProductList data={items}/>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    products: state.products,\n    filters: state.items,\n});\n  \nexport default connect(\n    mapStateToProps,\n    { fetchProducts }\n)(Shelf);"]},"metadata":{},"sourceType":"module"}