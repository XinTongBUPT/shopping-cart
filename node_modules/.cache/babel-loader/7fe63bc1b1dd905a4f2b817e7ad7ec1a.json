{"ast":null,"code":"import _objectSpread from \"/Users/xintong/shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios'; //Action Types\n// export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n\nexport var LOAD_CART = 'LOAD_CART';\nexport var ADD_PRODUCT = 'ADD_PRODUCT';\nexport var REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport var UPDATE_CART = 'UPDATE_CART';\nexport var UPDATE_FILTER = 'UPDATE_FILTER';\nvar INITIAL_STATE = {\n  products: [],\n  data: {\n    productQuantity: 0,\n    installments: 0,\n    totalPrice: 0,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  },\n  item: []\n}; //Reducers\n\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // case FETCH_PRODUCTS:\n    // return {\n    //     ...state,\n    //     products: action.payload\n    // };\n    case LOAD_CART:\n      return _objectSpread({}, state, {\n        products: action.payload\n      });\n\n    case ADD_PRODUCT:\n      return _objectSpread({}, state, {\n        productToAdd: Object.assign({}, action.payload)\n      });\n\n    case REMOVE_PRODUCT:\n      return _objectSpread({}, state, {\n        productToRemove: Object.assign({}, action.payload)\n      });\n\n    case UPDATE_CART:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    case UPDATE_FILTER:\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    default:\n      return state;\n  }\n} //Action Creators\n\nexport var loadCart = function loadCart(products) {\n  return {\n    type: LOAD_CART,\n    payload: products\n  };\n};\nexport var addProduct = function addProduct(product) {\n  return {\n    type: ADD_PRODUCT,\n    payload: product\n  };\n};\nexport var removeProduct = function removeProduct(product) {\n  return {\n    type: REMOVE_PRODUCT,\n    payload: product\n  };\n};\nexport var updateCart = function updateCart(cartProducts) {\n  return function (dispatch) {\n    var productQuantity = cartProducts.reduce(function (sum, p) {\n      sum += p.quantity;\n      return sum;\n    }, 0);\n    var totalPrice = cartProducts.reduce(function (sum, p) {\n      sum += p.price * p.quantity;\n      return sum;\n    }, 0);\n    var installments = cartProducts.reduce(function (greater, p) {\n      greater = p.installments > greater ? p.installments : greater;\n      return greater;\n    }, 0);\n    var cartTotal = {\n      productQuantity: productQuantity,\n      installments: installments,\n      totalPrice: totalPrice,\n      currencyId: 'USD',\n      currencyFormat: '$'\n    };\n    dispatch({\n      type: UPDATE_CART,\n      payload: cartTotal\n    });\n  };\n};\nexport var updateFilters = function updateFilters(filters) {\n  return {\n    type: UPDATE_FILTER,\n    payload: filters\n  };\n};","map":{"version":3,"sources":["/Users/xintong/shopping-cart/src/reducers/reducer.js"],"names":["axios","LOAD_CART","ADD_PRODUCT","REMOVE_PRODUCT","UPDATE_CART","UPDATE_FILTER","INITIAL_STATE","products","data","productQuantity","installments","totalPrice","currencyId","currencyFormat","item","reducer","state","action","type","payload","productToAdd","Object","assign","productToRemove","items","loadCart","addProduct","product","removeProduct","updateCart","cartProducts","dispatch","reduce","sum","p","quantity","price","greater","cartTotal","updateFilters","filters"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n//Action Types\n// export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\nexport const LOAD_CART= 'LOAD_CART';\nexport const ADD_PRODUCT= 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT= 'REMOVE_PRODUCT';\nexport const UPDATE_CART = 'UPDATE_CART';\nexport const UPDATE_FILTER = 'UPDATE_FILTER';\n\n\n\nconst INITIAL_STATE = {\n    products:[],\n    data: {\n        productQuantity: 0,\n        installments: 0,\n        totalPrice: 0,\n        currencyId: 'USD',\n        currencyFormat: '$'\n    },\n    item: [],\n\n};\n\n//Reducers\nexport default function reducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        // case FETCH_PRODUCTS:\n        // return {\n        //     ...state,\n        //     products: action.payload\n        // };\n        case LOAD_CART:\n          return {\n            ...state,\n            products: action.payload\n          };\n        case ADD_PRODUCT:\n          return {\n            ...state,\n            productToAdd: Object.assign({}, action.payload)\n          };\n        case REMOVE_PRODUCT:\n          return {\n            ...state,\n            productToRemove: Object.assign({}, action.payload)\n          };\n        case UPDATE_CART:\n          return {\n            ...state,\n            data: action.payload\n          };\n        case UPDATE_FILTER:\n          return {\n            ...state,\n            items: action.payload\n          };\n        default:\n          return state;\n      }\n}\n\n//Action Creators\n\nexport const loadCart = products => ({\n    type: LOAD_CART,\n    payload: products\n});\n\nexport const addProduct = product => ({\n    type: ADD_PRODUCT,\n    payload: product\n});\n\nexport const removeProduct = product => ({\n    type: REMOVE_PRODUCT,\n    payload: product\n});\n\nexport const updateCart = cartProducts => dispatch => {\n    let productQuantity = cartProducts.reduce((sum, p) => {\n      sum += p.quantity;\n      return sum;\n    }, 0);\n  \n    let totalPrice = cartProducts.reduce((sum, p) => {\n      sum += p.price * p.quantity;\n      return sum;\n    }, 0);\n  \n    let installments = cartProducts.reduce((greater, p) => {\n      greater = p.installments > greater ? p.installments : greater;\n      return greater;\n    }, 0);\n  \n    let cartTotal = {\n      productQuantity,\n      installments,\n      totalPrice,\n      currencyId: 'USD',\n      currencyFormat: '$'\n    };\n  \n    dispatch({\n      type: UPDATE_CART,\n      payload: cartTotal\n    });\n  };\n\n  export const updateFilters = filters => ({\n    type: UPDATE_FILTER,\n    payload: filters\n  });\n"]},"metadata":{},"sourceType":"module"}